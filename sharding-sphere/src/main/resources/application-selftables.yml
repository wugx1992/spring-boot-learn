spring:
  shardingsphere:
    datasource:
      names: master,slave      # 注册所有的数据源
      master:
        type: ${datasourceType}
        driver-class-name: ${driverClassName}
        url: jdbc:mysql://localhost:3306/sharding_test_0?useUnicode=true&characterEncoding=utf-8
        username: ${databaseUsername}
        password: ${databasePassword}
      slave:
        type: ${datasourceType}
        driver-class-name: ${driverClassName}
        url: jdbc:mysql://localhost:3306/sharding_test_1?useUnicode=true&characterEncoding=utf-8
        username: ${databaseUsername}
        password: ${databasePassword}
    props:
      sql:
        show: true
    sharding:
      #分表策略
      tables:
        history_log:
          actual-data-nodes: ds0.history_log_$->{1..2}
          table-strategy:
#            inline:
#              sharding-column: id
#              algorithm-expression: history_log$->{id % 2}
            complex:
              sharding-columns: id, create_time
              algorithm-class-name: indi.gxwu.jdbc.service.ComplexKeysShardingAlgorithmImpl
      binding-tables: history_log
      #读写分离
      master-slave-rules:
        ds0:
          master-data-source-name: master
          slave-data-source-names: slave



